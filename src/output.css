/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --spacing: 0.25rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --radius-sm: 0.25rem;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .static {
    position: static;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-full {
    width: 100%;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .basis-1\/2 {
    flex-basis: calc(1/2 * 100%);
  }
  .table-auto {
    table-layout: auto;
  }
  .border-separate {
    border-collapse: separate;
  }
  .border-spacing-y-2 {
    --tw-border-spacing-y: calc(var(--spacing) * 2);
    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-gray-500 {
    border-color: var(--color-gray-500);
  }
  .border-green-400 {
    border-color: var(--color-green-400);
  }
  .border-green-800 {
    border-color: var(--color-green-800);
  }
  .bg-green-900 {
    background-color: var(--color-green-900);
  }
  .bg-pink-400 {
    background-color: var(--color-pink-400);
  }
  .object-contain {
    object-fit: contain;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .wrap-normal {
    overflow-wrap: normal;
  }
  .whitespace-pre-line {
    white-space: pre-line;
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .not-sm\:justify-between {
    @media not (width >= 40rem) {
      justify-content: space-between;
    }
  }
  .not-lg\:flex-col-reverse {
    @media not (width >= 64rem) {
      flex-direction: column-reverse;
    }
  }
  .not-xl\:w-full {
    @media not (width >= 80rem) {
      width: 100%;
    }
  }
  .not-xl\:flex-col {
    @media not (width >= 80rem) {
      flex-direction: column;
    }
  }
  .group-hover\:text-green-300 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-green-300);
      }
    }
  }
  .md\:w-\[300px\] {
    @media (width >= 48rem) {
      width: 300px;
    }
  }
  .lg\:w-\[400px\] {
    @media (width >= 64rem) {
      width: 400px;
    }
  }
  .lg\:grow {
    @media (width >= 64rem) {
      flex-grow: 1;
    }
  }
  .xl\:w-\[200px\] {
    @media (width >= 80rem) {
      width: 200px;
    }
  }
  .xl\:w-\[500px\] {
    @media (width >= 80rem) {
      width: 500px;
    }
  }
  .xl\:w-\[700px\] {
    @media (width >= 80rem) {
      width: 700px;
    }
  }
  .xl\:max-w-\[400px\] {
    @media (width >= 80rem) {
      max-width: 400px;
    }
  }
  .xl\:flex-row {
    @media (width >= 80rem) {
      flex-direction: row;
    }
  }
  .xl\:justify-between {
    @media (width >= 80rem) {
      justify-content: space-between;
    }
  }
  .xl\:overflow-y-auto {
    @media (width >= 80rem) {
      overflow-y: auto;
    }
  }
  .xl\:group-hover\:w-\[400px\] {
    @media (width >= 80rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          width: 400px;
        }
      }
    }
  }
}
@layer base {
  html {
    display: flex;
    width: 100%;
    height: 100%;
    justify-content: center;
  }
  body {
    height: 100vh;
    background-color: var(--color-gray-900);
    color: var(--color-gray-400);
    @media (width >= 80rem) {
      width: var(--container-7xl);
    }
  }
  ul {
    list-style-type: disc;
    padding-left: calc(var(--spacing) * 5);
  }
  li {
    margin-bottom: calc(var(--spacing) * 2);
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
    border-color: var(--color-gray-600);
    padding-left: calc(var(--spacing) * 1);
  }
}
@layer components {
  .card {
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing) * 3);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-700);
    background-color: var(--color-gray-800);
    padding: calc(var(--spacing) * 3);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .card > h1 {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-300);
  }
  .card-link {
    cursor: pointer;
    --tw-duration: 200ms;
    transition-duration: 200ms;
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-green-800);
      }
    }
  }
  .link {
    cursor: pointer;
    color: var(--color-green-400);
    --tw-duration: 200ms;
    transition-duration: 200ms;
    &:hover {
      @media (hover: hover) {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-300);
      }
    }
  }
  .link-nohover {
    cursor: pointer;
    color: var(--color-green-400);
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .important {
    color: var(--color-yellow-300);
  }
  .optional {
    color: var(--color-gray-500);
  }
  .warning {
    max-height: calc(var(--spacing) * 40);
    overflow-y: auto;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-gray-700);
    background-color: var(--color-gray-900);
    padding: calc(var(--spacing) * 3);
    color: var(--color-red-600);
  }
  .warning-nobox {
    color: var(--color-red-600);
  }
  .embed_video {
    position: relative;
    height: calc(var(--spacing) * 0);
    width: 100%;
    padding-bottom: 56.25%;
  }
  .embed_video > iframe {
    position: absolute;
    width: 100%;
    height: 100%;
  }
  .button {
    cursor: pointer;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-green-600);
    background-color: var(--color-green-700);
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 1);
    color: var(--color-green-300);
    --tw-duration: 200ms;
    transition-duration: 200ms;
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-green-500);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-200);
      }
    }
  }
  .mytable td, .mytable th {
    vertical-align: top;
  }
}
@property --tw-border-spacing-x {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-spacing-y {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-duration: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
